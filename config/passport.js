var passport = require('passport');
var LocalStrategy= require('passport-local').Strategy; //one of passport library for local logins
var User = require('../models/user');


// serialize and deserialize
//this transform the data/user object to a form that can be stored in connect-mongo and mongodb later. data stored in session as an ID
// the id is automatically generated by mongo?
passport.serializeUser(function(user, done) {
  done(null, user._id);
});

passport.deserializeUser(function(id, done) {
  User.findById(id, function(err, user) {
    done(err, user);
  });
});



// middleware
//local-login is the name of the middleware. then we make a new instance of LocalStrategy and pass it required fields like email, password
//then we make an anonymous function to find matching user which is identified by email--> user.findOne
passport.use('local-login', new LocalStrategy({
  usernameField: 'email',
  passwordField: 'password',
  passReqToCallback: true,
}, function(req, email, password, done){
  User.findOne({email: email}, function(err, user){
    if(err) return done(err);
    if (!user){
      return done(null, false, req.flash('loginMessage', 'No user has been found'));
    }
    if (!user.comparePassword(password)){
      return done(null, false, req.flash('loginMessage', 'Oops! Wrong Password'));
    }
    return done(null, user);
  });
}));

// custom funtion to validate. we called this function isAuthenticated
exports.isAuthenticated = function(req, res, next){
  if (req.isAuthenticated()){
    return next();
  }
  res.redirect('/login');
}
